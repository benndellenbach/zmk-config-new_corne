#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        rotary_toggle: rotary_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "ROTARY_TOGGLE";
            bindings = <&tog>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <1>;
        };

        rotary_rgb_toggle: rotary_rgb_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "ROTARY_RGB_TOGGLE";
            bindings = <&to>, <&rgb_ug>;

            #binding-cells = <2>;
            tapping-term-ms = <1>;
        };

        rotary_bt: rotary_bt {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ROTARY_BT";
            #sensor-binding-cells = <0>;
            bindings = <&bt BT_NXT>, <&bt BT_PRV>;
        };

        AppSwitch: AppSwitch {
            compatible = "zmk,behavior-sensor-rotate";
            label = "APPSWITCH";
            #sensor-binding-cells = <0>;
            bindings = <&FApp>, <&RAlt>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        LeftAlt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <17 16>;
            layers = <0>;
        };

        LeftShift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <16 15>;
            layers = <0 4>;
        };

        LeftCtrl {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <15 14>;
            layers = <0 2>;
        };

        LeftSuper {
            bindings = <&kp LEFT_WIN>;
            key-positions = <14 17>;
        };

        RSuper {
            bindings = <&kp RIGHT_WIN>;
            key-positions = <26 23>;
            layers = <0>;
        };

        RCtrl {
            bindings = <&kp RIGHT_CONTROL>;
            key-positions = <25 26>;
            layers = <0>;
        };

        RShift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <24 25>;
            layers = <0>;
        };

        RAlt {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <23 24>;
            layers = <0>;
        };

        Navlock {
            bindings = <&tog 1>;
            key-positions = <46 23>;
            layers = <0 1 2 3 4 5 6>;
        };

        MouseLock {
            bindings = <&tog 2>;
            key-positions = <23 47>;
            layers = <0 1 2 3 4 5 6>;
        };

        FunLock {
            bindings = <&tog 3>;
            key-positions = <23 45>;
            layers = <0 1 2 3 4 5 6>;
        };

        NumLock {
            bindings = <&tog 4>;
            key-positions = <17 43>;
            layers = <0 1 2 3 4 5 6>;
        };

        SymLock {
            bindings = <&tog 5>;
            key-positions = <17 44>;
            layers = <0 1 2 3 4 5 6>;
        };

        RGBLock {
            bindings = <&tog 6>;
            key-positions = <17 42>;
            layers = <0 1 2 3 4 5 6>;
        };
    };

    macros {
        FApp: FApp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_ALT &kp LEFT_WIN &kp TAB>;
            label = "FAPP";
        };

        RAlt: RApp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp LEFT_WIN &kp LEFT_SHIFT &kp TAB>;
            label = "RAPP";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E         &kp R        &kp T                          &kp UP                &kp Y        &kp U            &kp I      &kp O    &kp P     &kp BSPC
&td0       &kp A  &kp S  &kp D         &kp F        &kp G                &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J            &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C         &kp V        &kp B      &tog 4              &kp DOWN              &kp N        &kp M            &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &lt 6 ESCAPE  &lt 4 SPACE  &lt 5 TAB                                            &lt 3 ENTER  &lt 1 BACKSPACE  &lt 2 DEL
            >;

            sensor-bindings = <&AppSwitch>;
        };

        NAVIGATION {
            display-name = "NAV";
            bindings = <
&bt BT_CLR   &kp K_UNDO  &kp K_CUT  &kp K_COPY     &kp K_PASTE      &kp K_REDO                             &mmv MOVE_UP                     &trans  &trans             &trans           &trans         &trans         &trans
&trans       &kp LEFT    &kp DOWN   &kp UP_ARROW   &kp RIGHT_ARROW  &trans                 &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans  &kp RIGHT_CONTROL  &kp RIGHT_SHIFT  &kp RIGHT_ALT  &kp RIGHT_WIN  &trans
&bootloader  &kp END     &kp PG_UP  &kp PAGE_DOWN  &kp HOME         &trans      &kp TAB                    &mmv MOVE_DOWN                   &trans  &trans             &trans           &trans         &trans         &trans
                                    &mkp RCLK      &mkp MB3         &mkp LCLK                                                               &trans  &trans             &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Mouse_Layer {
            display-name = "Mouse";
            bindings = <
&bt BT_CLR   &kp K_UNDO      &kp K_CUT       &kp K_COPY     &kp K_PASTE      &kp K_REDO                                  &mmv MOVE_UP                     &mkp LCLK  &mkp RCLK          &mkp MB3         &trans         &trans         &trans
&trans       &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP   &mmv MOVE_RIGHT  &kp CAPSLOCK                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans     &kp RIGHT_CONTROL  &kp RIGHT_SHIFT  &kp RIGHT_ALT  &kp RIGHT_WIN  &trans
&bootloader  &kp END         &kp PG_UP       &kp PAGE_DOWN  &kp HOME         &kp INS       &kp K_MUTE                    &mmv MOVE_DOWN                   &trans     &trans             &trans           &trans         &trans         &trans
                                             &kp BACKSPACE  &mkp MB1         &mkp MB2                                                                     &trans     &trans             &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        FUNCTION {
            display-name = "FUN";
            bindings = <
&kp TAB  &kp F12  &kp F9  &kp F8             &kp F7     &kp PG_UP                            &mmv MOVE_UP                     &trans  &trans  &trans  &trans  &trans  &trans
&trans   &kp F11  &kp F6  &kp F5             &kp F4     &kp PG_DN            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans  &trans  &trans  &trans  &trans  &trans
&trans   &kp F10  &kp F3  &kp F2             &kp F1     &kp HOME   &tog 5                    &mmv MOVE_DOWN                   &trans  &trans  &trans  &trans  &trans  &trans
                          &kp K_APPLICATION  &kp SPACE  &kp TAB                                                               &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        NUMPAD {
            display-name = "NUMPAD";
            bindings = <
&trans  &bootloader   &trans        &trans          &trans            &trans                            &mmv MOVE_UP                     &kp LEFT_BRACKET  &kp N7  &kp N8  &kp N9  &kp RIGHT_BRACKET  &kp BSPC
&trans  &kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &trans            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp EQUAL         &kp N4  &kp N5  &kp N6  &kp HOME           &kp PG_UP
&trans  &trans        &trans        &trans          &trans            &trans  &tog 5                    &mmv MOVE_DOWN                   &kp MINUS         &kp N1  &kp N2  &kp N3  &kp BACKSLASH      &kp PG_DN
                                    &trans          &trans            &trans                                                             &kp INS           &kp N0  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        SYMBOL {
            display-name = "SYMBOL";
            bindings = <
&trans  &bootloader   &trans        &trans          &trans            &trans                            &mmv MOVE_UP                     &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp ASTRK              &kp AMPERSAND  &kp RIGHT_BRACE  &trans
&trans  &kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &trans            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp PLUS        &kp CARET             &kp PERCENT            &kp DOLLAR     &kp COLON        &trans
&trans  &trans        &trans        &trans          &trans            &trans  &tog 2                    &mmv MOVE_DOWN                   &kp PIPE        &kp HASH              &kp AT                 &kp EXCL       &kp TILDE        &trans
                                    &trans          &trans            &trans                                                             &kp UNDERSCORE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        MEDIA {
            display-name = "MEDIA";
            bindings = <
&trans  &bootloader   &trans        &trans          &trans            &trans                                 &rgb_ug RGB_SAI                   &rgb_ug RGB_EFF    &rgb_ug RGB_SPD   &rgb_ug RGB_SPI  &trans        &trans        &trans
&trans  &kp LEFT_WIN  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &trans                &rgb_ug RGB_HUD  &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &ext_power EP_TOG  &kp K_PREV        &kp C_VOL_DN     &kp C_VOL_UP  &kp K_NEXT    &trans
&trans  &trans        &trans        &trans          &trans            &trans  &kp C_MUTE                     &rgb_ug RGB_SAD                   &out OUT_TOG       &bt BT_SEL 0      &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
                                    &trans          &trans            &trans                                                                   &kp K_STOP         &kp K_PLAY_PAUSE  &kp K_MUTE
            >;

            sensor-bindings = <&rgb_encoder>;
        };
    };
};
