#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        rotary_toggle: rotary_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "ROTARY_TOGGLE";
            bindings = <&tog>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <1>;
            flavor = "balanced";
            require-prior-idle-ms = <75>;
        };

        rotary_rgb_toggle: rotary_rgb_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "ROTARY_RGB_TOGGLE";
            bindings = <&to>, <&rgb_ug>;

            #binding-cells = <2>;
            tapping-term-ms = <1>;
        };

        rotary_bt: rotary_bt {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ROTARY_BT";
            #sensor-binding-cells = <0>;
            bindings = <&bt BT_NXT>, <&bt BT_PRV>;
        };

        AppSwitch: AppSwitch {
            compatible = "zmk,behavior-sensor-rotate";
            label = "APPSWITCH";
            #sensor-binding-cells = <0>;
            bindings = <&FApp>, <&RAlt>;
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <200>;
            label = "NEW_BEHAVIOR";
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        LeftAlt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <17 16>;
            layers = <0 1 2 4 5>;
        };

        LeftShift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <16 15>;
            layers = <0 5 1 4 2>;
        };

        LeftCtrl {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <15 14>;
            layers = <0 2 4 5>;
        };

        LeftSuper {
            bindings = <&kp LEFT_WIN>;
            key-positions = <14 17>;
            layers = <0 2 4 5>;
        };

        RSuper {
            bindings = <&kp RIGHT_WIN>;
            key-positions = <26 23>;
            layers = <0 1 3>;
        };

        RCtrl {
            bindings = <&kp RIGHT_CONTROL>;
            key-positions = <25 26>;
            layers = <0 1 3>;
        };

        RShift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <24 25>;
            layers = <0 1 3>;
        };

        RAlt {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <23 24>;
            layers = <0 1 3>;
        };

        Navlock {
            bindings = <&tog 3>;
            key-positions = <23 45>;
            layers = <0 1 2 4 5 5 6>;
        };

        MouseLock {
            bindings = <&tog 1>;
            key-positions = <42 17>;
            layers = <0 1 2 4 5 5 6>;
        };

        FunLock {
            bindings = <&tog 2>;
            key-positions = <23 46>;
            layers = <0 1 2 4 5 5 6>;
        };

        NumLock {
            bindings = <&tog 5>;
            key-positions = <17 44>;
            layers = <0 1 2 4 5 5 6>;
        };

        SymLock {
            bindings = <&tog 4>;
            key-positions = <17 43>;
            layers = <0 1 2 4 5 5 6>;
        };

        RGBLock {
            bindings = <&tog 6>;
            key-positions = <47 23>;
            layers = <0 1 2 4 5 5 6>;
        };

        LDefault {
            bindings = <&to 0>;
            key-positions = <13 17>;
            layers = <4 6 5>;
        };

        RDefault {
            bindings = <&to 0>;
            key-positions = <23 27>;
            layers = <1 2 3>;
        };
    };

    macros {
        FApp: FApp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_ALT &kp LEFT_WIN &kp TAB>;
            label = "FAPP";
        };

        RAlt: RApp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp LEFT_WIN &kp LEFT_SHIFT &kp TAB>;
            label = "RAPP";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E         &kp R        &kp T                             &kp UP               &kp Y            &kp U        &kp I      &kp O    &kp P     &kp BSPC
&td0       &kp A  &kp S  &kp D         &kp F        &kp G                   &kp LEFT  &tog 2    &kp RIGHT  &kp H            &kp J        &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C         &kp V        &kp B         &tog 6              &kp DOWN             &kp N            &kp M        &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &lt 1 ESCAPE  &lt 4 SPACE  &lt 5 DELETE                                           &lt 3 BACKSPACE  &lt 2 ENTER  &to 1
            >;

            sensor-bindings = <&inc_dec_kp TAB LS(TAB)>;
        };

        NAVIGATION {
            display-name = "GAMING";
            bindings = <
&trans  &trans  &kp F   &trans  &trans  &trans                                &mmv MOVE_UP                     &trans  &trans          &trans        &trans    &trans     &kp C_PLAY_PAUSE
&trans  &kp A   &kp S   &kp W   &kp D   &trans                &mmv MOVE_LEFT  &mkp MB3        &mmv MOVE_RIGHT  &trans  &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN  &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp K_MUTE                    &mmv MOVE_DOWN                   &trans  &trans          &trans        &trans    &trans     &trans
                        &trans  &trans  &trans                                                                 &trans  &trans          &to 2
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        Mouse_Layer {
            display-name = "MOUSE";
            bindings = <
&kp PAGE_UP    &kp END         &kp PG_UP       &kp PAGE_DOWN  &kp C_AC_HOME    &kp INS                              &mmv MOVE_UP                     &mkp LCLK  &mkp MB3  &mkp RCLK  &trans  &trans  &trans
&kp PAGE_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP   &mmv MOVE_RIGHT  &kp TAB              &mmv MOVE_LEFT  &trans          &mmv MOVE_RIGHT  &mkp MB4   &trans    &trans     &trans  &trans  &trans
&kp HOME       &kp LC(Z)       &kp LC(X)       &kp LC(C)      &kp LC(V)        &kp LC(Y)  &trans                    &mmv MOVE_DOWN                   &mkp MB5   &trans    &trans     &trans  &trans  &trans
                                               &mkp MCLK      &mkp LCLK        &mkp RCLK                                                             &trans     &trans    &to 3
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        FUNCTION {
            display-name = "FUN";
            bindings = <
&kp PG_UP  &trans  &kp F12  &kp F7             &kp F8     &kp F9                             &mmv MOVE_UP                     &trans  &trans  &trans  &trans  &trans  &trans
&kp PG_DN  &trans  &kp F11  &kp F4             &kp F5     &kp F6             &mmv MOVE_LEFT  &mkp MB3        &mmv MOVE_RIGHT  &trans  &trans  &trans  &trans  &trans  &trans
&kp HOME   &trans  &kp F10  &kp F1             &kp F2     &kp F3   &kp F5                    &mmv MOVE_DOWN                   &trans  &trans  &trans  &trans  &trans  &trans
                            &kp K_APPLICATION  &kp SPACE  &kp TAB                                                             &trans  &trans  &to 4
            >;
        };

        NUMPAD {
            display-name = "NUMPAD";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                &msc SCRL_UP                     &kp N7  &kp N8  &kp N9  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BSPC
&trans  &trans  &trans  &trans  &trans  &trans                &msc SCRL_LEFT  &mkp LCLK       &msc SCRL_RIGHT  &kp N4  &kp N5  &kp N6  &kp PLUS          &kp COLON          &kp EQUAL
&trans  &trans  &trans  &trans  &trans  &trans  &kp K_MUTE                    &msc SCRL_DOWN                   &kp N1  &kp N2  &kp N3  &kp MINUS         &kp SLASH          &trans
                        &trans  &trans  &trans                                                                 &kp N0  &trans  &to 5
            >;

            sensor-bindings = <&inc_dec_kp LS(RIGHT) LS(LEFT)>;
        };

        SYMBOL {
            display-name = "SYMBOL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                            &mmv MOVE_UP                     &kp RIGHT_BRACE       &kp ASTERISK           &kp AMPERSAND    &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp CARET             &kp PERCENT            &kp DOLLAR       &kp PLUS        &kp COLON        &kp TILDE
&trans  &trans  &trans  &trans  &trans  &trans  &tog 2                    &mmv MOVE_DOWN                   &kp HASH              &kp AT_SIGN            &kp EXCLAMATION  &kp UNDERSCORE  &kp BACKSLASH    &trans
                        &trans  &trans  &trans                                                             &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &to 6
            >;

            sensor-bindings = <&inc_dec_kp LC(Y) LC(Z)>;
        };

        RGB {
            display-name = "SYSTEM";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                   &rgb_ug RGB_SAI                   &trans  &trans             &trans           &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &rgb_ug RGB_HUD  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &trans  &rgb_ug RGB_TOG    &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &out OUT_TOG                     &rgb_ug RGB_SAD                   &trans  &ext_power EP_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &trans  &trans
                        &trans  &trans  &trans                                                                     &trans  &trans             &to 0
            >;

            sensor-bindings = <&rotary_bt>;
        };
    };
};
