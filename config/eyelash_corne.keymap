#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        rotary_toggle: rotary_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "ROTARY_TOGGLE";
            bindings = <&tog>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <1>;
            flavor = "balanced";
            require-prior-idle-ms = <75>;
        };

        rotary_rgb_toggle: rotary_rgb_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "ROTARY_RGB_TOGGLE";
            bindings = <&to>, <&rgb_ug>;

            #binding-cells = <2>;
            tapping-term-ms = <1>;
        };

        rotary_bt: rotary_bt {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ROTARY_BT";
            #sensor-binding-cells = <0>;
            bindings = <&bt BT_NXT>, <&bt BT_PRV>;
        };

        AppSwitch: AppSwitch {
            compatible = "zmk,behavior-sensor-rotate";
            label = "APPSWITCH";
            #sensor-binding-cells = <0>;
            bindings = <&FApp>, <&RAlt>;
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <200>;
            label = "NEW_BEHAVIOR";
        };

        RGBHUE: RGBHUE {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;

            label = "RGBHUE";
        };

        RGBSAT: RGBSAT {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_SAI>, <&rgb_ug RGB_SAD>;

            label = "RGBSAT";
        };

        RGBSPD: RGBSPD {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_SPI>, <&rgb_ug RGB_SPD>;

            label = "RGBSPD";
        };

        SYSTOG: SYSTOG {
            compatible = "zmk,behavior-hold-tap";
            label = "SYSTOG";
            bindings = <&to>, <&tog>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <500>;
        };

        SYSTO: SYSTO {
            compatible = "zmk,behavior-hold-tap";
            label = "SYSTO";
            bindings = <&to>, <&to>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <500>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        LeftAlt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <17 16>;
            layers = <2 3 5 6 0 4 1>;
        };

        LeftShift {
            bindings = <&td0>;
            key-positions = <16 15>;
            layers = <6 2 5 3 0 4 1>;
        };

        LeftCtrl {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <15 14>;
            layers = <3 5 6 0 2 4 1>;
        };

        LeftSuper {
            bindings = <&kp LEFT_WIN>;
            key-positions = <14 17>;
            layers = <3 5 6 0 2 4 1>;
        };

        RSuper {
            bindings = <&kp RIGHT_WIN>;
            key-positions = <26 23>;
            layers = <2 4 0 3 5 6 1>;
        };

        RCtrl {
            bindings = <&kp RIGHT_CONTROL>;
            key-positions = <25 26>;
            layers = <2 4 0 3 5 6 1>;
        };

        RShift {
            bindings = <&td0>;
            key-positions = <24 25>;
            layers = <2 4 0 3 5 6 1>;
        };

        RAlt {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <23 24>;
            layers = <2 4 0 3 5 6 1>;
        };

        Gamelock {
            bindings = <&tog 3>;
            key-positions = <43 17>;
            layers = <3 5 4 6 2 0 1>;
        };

        MouseLock {
            bindings = <&tog 3>;
            key-positions = <46 23>;
            layers = <3 5 4 6 0 1>;
        };

        FunLock {
            bindings = <&tog 4>;
            key-positions = <23 45>;
            layers = <3 5 4 6 0 1>;
        };

        NumLock {
            bindings = <&tog 5>;
            key-positions = <17 44>;
            layers = <3 5 4 0 1 6>;
        };

        SymLock {
            bindings = <&tog 6>;
            key-positions = <17 42>;
            layers = <3 5 4 6 0 1>;
        };

        RGBLock {
            bindings = <&tog 7>;
            key-positions = <23 47>;
            layers = <3 5 4 0 6 1 7 9 10 11 12>;
        };

        LDefault {
            bindings = <&to 0>;
            key-positions = <13 17>;
            layers = <0 3 4 5 6 2 1>;
        };

        RDefault {
            bindings = <&to 0>;
            key-positions = <23 27>;
            layers = <2 3 4 0 5 6 1>;
        };

        LRPT {
            bindings = <&key_repeat>;
            key-positions = <31 32>;
            layers = <2 4 5 6 3 0 1>;
        };

        RRPT {
            bindings = <&key_repeat>;
            key-positions = <37 38>;
            layers = <2 4 5 6 3 0 1>;
        };
    };

    macros {
        FApp: FApp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_ALT &kp LEFT_WIN &kp TAB>;
            label = "FAPP";
        };

        RAlt: RApp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp LEFT_WIN &kp LEFT_SHIFT &kp TAB>;
            label = "RAPP";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            display-name = "QWERTY";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E      &kp R        &kp T                                 &kp UP               &kp Y         &kp U        &kp I            &kp O    &kp P     &kp DELETE
&td0       &kp A  &kp S  &kp D      &kp F        &kp G                       &kp LEFT  &tog 2    &kp RIGHT  &kp H         &kp J        &kp K            &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C      &kp V        &kp B        &SYSTOG 7 1              &kp DOWN             &kp N         &kp M        &kp COMMA        &kp DOT  &kp FSLH  &kp ESC
                         &lt 6 TAB  &lt 3 SPACE  &lt 5 ENTER                                                &lt 4 RETURN  &lt 3 SPACE  &lt 7 BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOLUME_DOWN>;
        };

        QTAB {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &SYSTO 7 0            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                        &trans  &trans  &trans
            >;

            label = "TAB";
            sensor-bindings = <&inc_dec_kp TAB LS(TAB)>;
        };

        Gamepad {
            display-name = "GAMING";
            bindings = <
&trans  &trans  &kp E   &kp W    &trans     &trans                            &mmv MOVE_UP                     &trans          &mkp LCLK        &kp UP_ARROW   &mkp RCLK     &trans           &trans
&trans  &kp F   &kp A   &kp S    &kp D      &trans            &mmv MOVE_LEFT  &trans          &mmv MOVE_RIGHT  &trans          &kp LEFT_ARROW   &kp UP_ARROW   &kp DOWN      &trans           &trans
&trans  &trans  &trans  &trans   &trans     &trans  &trans                    &mmv MOVE_DOWN                   &msc SCRL_LEFT  &msc SCRL_DOWN   &mkp MB3       &msc SCRL_UP  &msc SCRL_RIGHT  &trans
                        &kp TAB  &kp SPACE  &trans                                                             &trans          &kp RIGHT_SHIFT  &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        Mouse_Layer {
            display-name = "MOUSE";
            bindings = <
&kp PAGE_UP    &kp END         &kp PG_UP       &kp PAGE_DOWN  &kp C_AC_HOME    &kp INS                              &mmv MOVE_UP                     &trans          &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &trans           &trans
&kp PAGE_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP   &mmv MOVE_RIGHT  &kp TAB              &mmv MOVE_LEFT  &trans          &mmv MOVE_RIGHT  &trans          &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans           &trans
&kp HOME       &kp LC(Z)       &kp LC(X)       &kp LC(C)      &kp LC(V)        &kp LC(Y)  &trans                    &mmv MOVE_DOWN                   &msc SCRL_LEFT  &msc SCRL_DOWN  &mkp MB3        &msc SCRL_UP     &msc SCRL_RIGHT  &trans
                                               &trans         &trans           &trans                                                                &mkp MB2        &mkp LCLK       &mkp MB3
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        FUNCTION {
            display-name = "FUN";
            bindings = <
&kp PG_UP  &kp F12  &kp F7  &kp F8             &kp F9     &trans                     &trans          &trans  &trans  &trans  &trans  &trans  &trans
&kp PG_DN  &kp F11  &kp F4  &kp F5             &kp F6     &trans             &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp HOME   &kp F10  &kp F1  &kp F2             &kp F3     &trans   &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                            &kp K_APPLICATION  &kp SPACE  &kp TAB                                    &trans  &trans  &trans
            >;
        };

        NUMPAD {
            display-name = "NUMPAD";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                            &msc SCRL_UP                     &kp LEFT_BRACKET  &kp N7  &kp N8                 &kp N9  &kp RIGHT_BRACKET  &kp BSPC
&trans  &trans  &trans  &trans  &trans  &trans            &msc SCRL_LEFT  &mkp LCLK       &msc SCRL_RIGHT  &kp PLUS          &kp N4  &kp N5                 &kp N6  &kp COLON          &kp EQUAL
&trans  &trans  &trans  &trans  &trans  &trans  &trans                    &msc SCRL_DOWN                   &kp MINUS         &kp N1  &kp N2                 &kp N3  &kp SLASH          &trans
                        &trans  &trans  &trans                                                             &kp LPAR          &kp N0  &kp RIGHT_PARENTHESIS
            >;

            sensor-bindings = <&inc_dec_kp LS(RIGHT) LS(LEFT)>;
        };

        SYMBOL {
            display-name = "SYMBOL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                            &mmv MOVE_UP                     &kp LEFT_BRACE        &kp AMPS    &kp STAR               &kp LEFT_PARENTHESIS  &kp RIGHT_BRACE  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp PLUS              &kp DOLLAR  &kp PERCENT            &kp CARET             &kp COLON        &kp TILDE
&trans  &trans  &trans  &trans  &trans  &trans  &trans                    &mmv MOVE_DOWN                   &kp UNDER             &kp EXCL    &kp AT                 &kp HASH              &kp BACKSLASH    &trans
                        &trans  &trans  &trans                                                             &kp LEFT_PARENTHESIS  &trans      &kp RIGHT_PARENTHESIS
            >;

            sensor-bindings = <&inc_dec_kp LC(Y) LC(Z)>;
        };

        SYSTEM {
            display-name = "MEDIA";
            bindings = <
&trans  &trans      &trans        &trans           &rgb_ug RGB_EFF   &rgb_ug RGB_TOG                                   &rgb_ug RGB_SAI                   &trans        &trans             &trans           &trans           &trans  &to 0
&trans  &kp C_PREV  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_NEXT        &ext_power EP_TOG                &rgb_ug RGB_HUD  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &out OUT_TOG  &rgb_ug RGB_TOG    &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &trans  &trans
&trans  &trans      &bt BT_SEL 2  &bt BT_SEL 1     &bt BT_SEL 0      &out OUT_TOG       &SYSTO 0 9                     &rgb_ug RGB_SAD                   &trans        &ext_power EP_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &trans  &trans
                                  &kp K_MUTE       &kp C_PLAY_PAUSE  &kp K_STOP                                                                          &trans        &trans             &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP K_VOLUME_DOWN>;
        };

        Bluetooth {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;

            sensor-bindings = <&rotary_bt>;
            label = "BTy";
        };

        RGB1 {
            display-name = "RGB BRI";
            bindings = <
&trans  &trans      &trans        &trans           &rgb_ug RGB_EFF   &rgb_ug RGB_TOG                                &rgb_ug RGB_SAI                   &trans        &trans             &trans           &trans           &trans  &trans
&trans  &kp C_PREV  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_NEXT        &ext_power EP_TOG             &rgb_ug RGB_HUD  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &out OUT_TOG  &rgb_ug RGB_TOG    &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &trans  &trans
&trans  &trans      &bt BT_SEL 2  &bt BT_SEL 1     &bt BT_SEL 0      &out OUT_TOG       &tog 10                     &rgb_ug RGB_SAD                   &trans        &ext_power EP_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &trans  &trans
                                  &kp K_MUTE       &kp C_PLAY_PAUSE  &kp K_STOP                                                                       &trans        &trans             &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };

        RGB2 {
            display-name = "RGB HUE";
            bindings = <
&trans  &trans      &trans        &trans           &rgb_ug RGB_EFF   &rgb_ug RGB_TOG                                &rgb_ug RGB_SAI                   &trans        &trans             &trans           &trans           &trans  &trans
&trans  &kp C_PREV  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_NEXT        &ext_power EP_TOG             &rgb_ug RGB_HUD  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &out OUT_TOG  &rgb_ug RGB_TOG    &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &trans  &trans
&trans  &trans      &bt BT_SEL 2  &bt BT_SEL 1     &bt BT_SEL 0      &out OUT_TOG       &tog 11                     &rgb_ug RGB_SAD                   &trans        &ext_power EP_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &trans  &trans
                                  &kp K_MUTE       &kp C_PLAY_PAUSE  &kp K_STOP                                                                       &trans        &trans             &trans
            >;

            sensor-bindings = <&RGBHUE>;
        };

        RGB3 {
            display-name = "RGB SAT";
            bindings = <
&trans  &trans      &trans        &trans           &rgb_ug RGB_EFF   &rgb_ug RGB_TOG                                &rgb_ug RGB_SAI                   &trans        &trans             &trans           &trans           &trans  &trans
&trans  &kp C_PREV  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_NEXT        &ext_power EP_TOG             &rgb_ug RGB_HUD  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &out OUT_TOG  &rgb_ug RGB_TOG    &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &trans  &trans
&trans  &trans      &bt BT_SEL 2  &bt BT_SEL 1     &bt BT_SEL 0      &out OUT_TOG       &tog 12                     &rgb_ug RGB_SAD                   &trans        &ext_power EP_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &trans  &trans
                                  &kp K_MUTE       &kp C_PLAY_PAUSE  &kp K_STOP                                                                       &trans        &trans             &trans
            >;

            sensor-bindings = <&RGBSAT>;
        };

        RGB4 {
            display-name = "RGB SPD";
            bindings = <
&trans  &trans      &trans        &trans           &rgb_ug RGB_EFF   &rgb_ug RGB_TOG                                   &rgb_ug RGB_SAI                   &trans        &trans             &trans           &trans           &trans  &trans
&trans  &kp C_PREV  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_NEXT        &ext_power EP_TOG                &rgb_ug RGB_HUD  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &out OUT_TOG  &rgb_ug RGB_TOG    &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &trans  &trans
&trans  &trans      &bt BT_SEL 2  &bt BT_SEL 1     &bt BT_SEL 0      &out OUT_TOG       &SYSTO 7 0                     &rgb_ug RGB_SAD                   &trans        &ext_power EP_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &trans  &trans
                                  &kp K_MUTE       &kp C_PLAY_PAUSE  &kp K_STOP                                                                          &trans        &trans             &trans
            >;

            sensor-bindings = <&RGBSPD>;
        };

        Zoom {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PLUS) LC(MINUS)>;
            label = "ZOOM";
        };
    };
};
