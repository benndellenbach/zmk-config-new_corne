#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        rotary_toggle: rotary_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "ROTARY_TOGGLE";
            bindings = <&tog>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <1>;
        };

        rotary_rgb_toggle: rotary_rgb_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "ROTARY_RGB_TOGGLE";
            bindings = <&to>, <&rgb_ug>;

            #binding-cells = <2>;
            tapping-term-ms = <1>;
        };

        rotary_bt: rotary_bt {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ROTARY_BT";
            #sensor-binding-cells = <0>;
            bindings = <&bt BT_NXT>, <&bt BT_PRV>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        LeftAlt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <16 17>;
        };

        LeftShift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <16 15>;
            layers = <0 1>;
        };

        LeftCtrl {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <15 14>;
            layers = <0 3>;
        };

        LeftSuper {
            bindings = <&kp LEFT_WIN>;
            key-positions = <14 17>;
        };

        RSuper {
            bindings = <&kp RIGHT_WIN>;
            key-positions = <23 26>;
        };

        RCtrl {
            bindings = <&kp RIGHT_CONTROL>;
            key-positions = <26 25>;
        };

        RShift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <24 25>;
            layers = <0>;
        };

        RAlt {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <23 24>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E         &kp R        &kp T                          &kp UP                &kp Y        &kp U   &kp I      &kp O    &kp P     &kp BSPC
&td0       &kp A  &kp S  &kp D         &kp F        &kp G                &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C         &kp V        &kp B      &tog 1              &kp DOWN              &kp N        &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &lt 2 ESCAPE  &lt 3 SPACE  &lt 1 TAB                                            &lt 1 ENTER  &tog 4  &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUM/FN";
            bindings = <
&kp TAB  &kp F12  &kp F9  &kp F8  &kp F7  &kp PG_UP                            &mmv MOVE_UP                     &kp LEFT_BRACKET  &kp N7  &kp N8  &kp N9  &kp RIGHT_BRACKET  &kp BSPC
&trans   &kp F11  &kp F6  &kp F5  &kp F4  &kp PG_DN            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp EQUAL         &kp N4  &kp N5  &kp N6  &kp HOME           &kp PG_UP
&trans   &kp F10  &kp F3  &kp F2  &kp F1  &kp HOME   &tog 2                    &mmv MOVE_DOWN                   &kp MINUS         &kp N1  &kp N2  &kp N3  &kp BACKSLASH      &kp PG_DN
                          &trans  &trans  &trans                                                                &kp INS           &kp N0  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH  &kp DLLR  &kp PRCNT                            &mmv MOVE_UP                     &kp LEFT_BRACE  &kp AMPS              &kp ASTRK    &kp LPAR   &kp RIGHT_BRACE  &kp BSPC
&trans  &trans        &trans        &trans    &trans    &trans               &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp PLUS        &kp DOLLAR            &kp PERCENT  &kp CARET  &kp COLON        &kp GRAVE
&trans  &out OUT_USB  &out OUT_BLE  &none     &trans    &mkp MB5   &tog 3                    &mmv MOVE_DOWN                   &kp UNDER       &kp EXCL              &kp AT       &kp HASH   &kp TILDE        &kp TILDE
                                    &trans    &trans    &kp SPACE                                                             &kp ENTER       &kp LEFT_PARENTHESIS  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Mouse_Layer {
            display-name = "Mouse";
            bindings = <
&bt BT_CLR   &kp K_UNDO      &kp K_CUT       &kp K_COPY     &kp K_PASTE      &kp K_REDO                              &mmv MOVE_UP                     &trans  &trans           &trans             &trans         &trans         &trans
&trans       &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP   &mmv MOVE_RIGHT  &kp CAPSLOCK            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans  &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_WIN  &trans
&bootloader  &kp END         &kp PG_UP       &kp PAGE_DOWN  &kp HOME         &kp INS       &tog 4                    &mmv MOVE_DOWN                   &trans  &trans           &trans             &trans         &trans         &trans
                                             &kp BACKSPACE  &kp DELETE       &trans                                                                   &trans  &trans           &trans
            >;

            sensor-bindings = <&rotary_bt>;
        };

        rgb {
            display-name = "NUMBER";
            bindings = <
&trans  &rgb_ug RGB_COLOR_HSB(0,0,100)  &rgb_ug RGB_COLOR_HSB(0,100,50)  &rgb_ug RGB_COLOR_HSB(302,100,50)  &rgb_ug RGB_COLOR_HSB(293,100,50)  &rgb_ug RGB_COLOR_HSB(176,100,50)                             &rgb_ug RGB_HUI                   &rgb_ug RGB_COLOR_HSB(241,100,50)  &rgb_ug RGB_COLOR_HSB(36,100,50)  &rgb_ug RGB_COLOR_HSB(58,100,50)  &rgb_ug RGB_COLOR_HSB(97,100,50)  &rgb_ug RGB_COLOR_HSB(360,0,0)  &trans
&trans  &rgb_ug RGB_SPI                 &rgb_ug RGB_HUI                  &rgb_ug RGB_SAI                    &rgb_ug RGB_ON                     &trans                                       &rgb_ug RGB_SPD  &rgb_ug RGB_EFF  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI                    &trans                            &trans                            &trans                            &trans                          &trans
&trans  &rgb_ug RGB_SPD                 &rgb_ug RGB_HUD                  &rgb_ug RGB_SAD                    &rgb_ug RGB_OFF                    &trans                             &tog 0                     &rgb_ug RGB_HUD                   &rgb_ug RGB_SAD                    &trans                            &trans                            &trans                            &trans                          &trans
                                                                         &trans                             &trans                             &trans                                                                                          &tog 4                             &trans                            &trans
            >;

            sensor-bindings = <&rgb_encoder>;
            label = "rgb";
        };

        layer_5 {
            display-name = "NUM/FN";
            bindings = <
&kp TAB  &kp F12  &kp F9  &kp F8             &kp F7     &kp PG_UP                            &mmv MOVE_UP                     &trans     &kp N7  &kp N8  &kp N9  &kp RIGHT_BRACKET  &kp BSPC
&trans   &kp F11  &kp F6  &kp F5             &kp F4     &kp PG_DN            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp EQUAL  &kp N4  &kp N5  &kp N6  &kp HOME           &kp PG_UP
&trans   &kp F10  &kp F3  &kp F2             &kp F1     &kp HOME   &tog 2                    &mmv MOVE_DOWN                   &kp MINUS  &kp N1  &kp N2  &kp N3  &kp BACKSLASH      &kp PG_DN
                          &kp K_APPLICATION  &kp SPACE  &kp TAB                                                               &kp INS    &kp N0  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
